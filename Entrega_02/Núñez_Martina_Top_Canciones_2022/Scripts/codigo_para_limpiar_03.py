# -*- coding: utf-8 -*-
"""ENTREGA 02 - NGN. 03

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10MYKj0QunVl2O0kL-W2cub1P8RzagZB7

Identificamos que en el Top Chile 2022 estaban presentes los siguientes artistas urbanos chilenos: "Pailita", "Polimá Westcoast", "Paloma Mami", "Cris Mj", "Ak4:20", "Standly", "Julianno Sosa", "King Savagge", "Young Cister", "Nickoog Clk", "Sayian Jimmy", "Tunechikidd", "Marcianeke", "Simon la letra", "El Barto", "Gino Mella", "Bailbi el Chamako", "El Bai", "Jairo Vera", "Harry Nach", "Lleflight", "Pablo Chill-E", "Galee Galee", "Dainesitta", y "ITHAN NY". Ahora procederemos a realizar una limpieza de la base de datos en general, conservando únicamente a estos artistas, con el fin de verificar si se repiten en los demás países y en el Top Global 2022.
"""

import pandas as pd

#Cargamos el archivo CSV en un DataFrame.
Base_de_datos_original = pd.read_csv('/content/drive/MyDrive/BASES DE DATOS/base_de_datos_original.csv')

#Lista de nombres de los artistas urbanos chilenos que deseamos buscar.
nombres_artistas_urbanos_chilenos = ["Pailita", "Polimá Westcoast", "Paloma Mami", "Cris Mj", "Ak4:20", "Standly", "Julianno Sosa", "King Savagge", "Young Cister", "Nickoog Clk",
                                     "Sayian Jimmy", "Tunechikidd", "Marcianeke", "Simon la letra", "El Barto", "Gino Mella", "Bailbi el Chamako", "El Bai", "Jairo Vera", "Harry Nach",
                                      "Lleflight", "Pablo Chill-E", "Galee Galee", "Dainesitta", "ITHAN NY"]

#Creamos una condición que busca cualquiera de los nombres de artistas urbanos chilenos en la columna "artist_names".
#Usamos el operador | (OR) para combinar las condiciones de búsqueda de todos los nombres de artistas urbanos chilenos especificados en la lista nombres_artistas_urbanos_chilenos.
#La opción "case=False" indica que la búsqueda no distinga entre mayúsculas y minúsculas, y "na=False" evita que se traten los valores nulos.
condicion = Base_de_datos_original["artist_names"].str.contains('|'.join(nombres_artistas_urbanos_chilenos), case=False, na=False)

#Filtramos el DataFrame utilizando la condición.
resultados = Base_de_datos_original.loc[condicion]

#Ordenamos el DataFrame por la columna "país" y las otras columnas especificadas.
resultados_ordenados = resultados.sort_values(by=["país", "rank", "artist_names", "track_name", "peak_rank", "weeks_on_chart", "streams"])

#Guardamos el DataFrame procesado en un archivo CSV en nuestro Drive.
ruta_guardado = '/content/drive/MyDrive/BASES DE DATOS/base_de_datos_limpia.csv'
resultados_ordenados.to_csv(ruta_guardado, index=False)

"""Basándonos en el proceso de limpieza que llevamos a cabo anteriormente, procederemos a evaluar si podemos responder algunas preguntas cruciales para nuestra investigación a través de la base de datos."""

#¿Cuál es la canción más popular de un artista específico?

#Definir el artista que queremos evaluar
artista = "Cris Mj"

#"canciones_artista" contiene todas las filas del DataFrame original "Base_de_datos_original" donde la columna "artist_names" es igual al nombre del artista objetivo ("Cris Mj" en este caso).
#Esto filtra todas las canciones del artista específico.
canciones_artista = Base_de_datos_original[Base_de_datos_original["artist_names"] == artista]

#Aquí, se utiliza el DataFrame "canciones_artista" filtrado previamente para encontrar la canción más popular.
#Para hacerlo, se utiliza el método "idxmax()" para obtener el índice de la fila que tiene el valor máximo en la columna "streams", que representa el número de streams de una canción.
#Luego, se utiliza "loc" para seleccionar la fila correspondiente a la canción más popular.
cancion_mas_popular = canciones_artista.loc[canciones_artista["streams"].idxmax()]
print(cancion_mas_popular)

#¿Cuál es la canción de música urbana chilena más popular en un país específico?

#Definimos el país que queremos evaluar
pais = "Chile_2022_limpio.csv"

#Se crea un nuevo DataFrame llamado "canciones_en_pais" que contiene todas las filas del DataFrame original "Base_de_datos_original" donde la columna "país" es igual al país objetivo ("Chile_2022_limpio.csv" en este caso).
#Esto filtra todas las canciones relacionadas con ese país en particular.
canciones_en_pais = Base_de_datos_original[Base_de_datos_original["país"] == pais]

#Aquí, se utiliza el DataFrame "canciones_en_pais" filtrado previamente para encontrar la canción más popular en ese país.
#Al igual que en el código anterior, se utiliza el método "idxmax()" para obtener el índice de la fila que tiene el valor máximo en la columna "streams", que representa el número de streams de una canción.
#Luego, se utiliza "loc" para seleccionar la fila correspondiente a la canción más popular en ese país.
cancion_mas_popular_en_pais = canciones_en_pais.loc[canciones_en_pais["streams"].idxmax()]
print(cancion_mas_popular_en_pais)

#¿Cuál es el artista con más canciones en la lista?

#En esta línea, se crea una Serie (una columna de datos unidimensional) llamada "artistas_con_canciones."
#Esta Serie se obtiene contando cuántas veces aparece cada nombre de artista en la columna "artist_names" del DataFrame "resultados_ordenados".
artistas_con_canciones = resultados_ordenados["artist_names"].value_counts()

#Esta línea busca el nombre del artista que tiene la mayor cantidad de canciones en la lista.
#Para hacerlo, utilizamos el método "idxmax()", que devuelve el índice (en este caso, el nombre del artista) correspondiente al valor máximo en la Serie "artistas_con_canciones".
#Esto significa que "artista_mas_escuchado" contendrá el nombre del artista con más canciones.
artista_mas_escuchado = artistas_con_canciones.idxmax()

#En esta línea, se obtiene la cantidad de canciones que tiene el artista más escuchado.
#Para ello, utilizamos el método "max()" en la Serie "artistas_con_canciones", que devuelve el valor máximo en la Serie, es decir, la cantidad máxima de canciones de un artista.
num_canciones_artista_mas_escuchado = artistas_con_canciones.max()
print(f"{artista_mas_prolifico} es el artista con más canciones en la lista ({num_canciones_artista_mas_escuchado} canciones).")